<?xml version="1.0"?>
<proficiencies>
  <entry>
    <title><![CDATA[ PHP ]]></title>
    <rank>Proficient</rank>
    <description><![CDATA[
      <p>
        PHP is my bread and butter server-side language.  While frameworks and languages like Node.js, Ruby on Rails, and Python have become more popular, I still find PHP a great language for doing all things web, as I've used it to do everything from image processing/creating to proxying remote websites.  While I initially started out with .NET when working on the web, I enjoyed how quick it was to write PHP code and get it on the web, and with good design practices, it can still serve a variety of needs well.
      </p>
    ]]></description>  
  </entry>
  <entry>
    <title><![CDATA[ Javascript/Ajax/HTML5 ]]></title>
    <rank>Proficient</rank>
    <description><![CDATA[
      <p>
        There's seemingly no hotter language than Javascript right now, as it seems these days new frameworks are popping up everyday, and Javascript is now being used to do everything from server-side programming (Node.js) to building online games. And with HTML5 compatibility being spread across most major platforms, including modern mobile browsers, we have a wide array of devices to both build for and support.
      </p>
      <p>
        All this change is quite hectic, but fortunately because I learned Javascript when libraries such as jQuery were just starting to be written gave me a good background in both hand-coded Javascript as well as using libraries and frameworks to get things done faster.
      </p>
      <p>
        Also, at Planetwide Games, I had done pure Javascript development for a full year (nothing but Javascript and Ajax full-time!), so I feel I'm very familiar about the pitfalls of browser incompatibilities and issues with features not being supported for a particular flavor of Javascript for a particular browser. 
      </p>
      <p>
        And though the web will continue to develop, I'm pretty confident that I can adapt to the new changes coming up the pipeline.
      </p>
    ]]></description>
  </entry>
  <entry>
    <title><![CDATA[ CSS and CSS-P Layouts ]]></title>
    <rank>Proficient</rank>
    <description><![CDATA[
      <p>
        I feel pretty confident about CSS, and with CSS3 we get a lot of new features such as rotation of elements and media queries.  I've learned much of what I know about CSS on my own, as many places I've worked at insist on using archaic HTML layouts. I'm a big fan of CSS-P to make website layouts that can be modified later due to good CSS design, but I've learned to compromise with CSS and HTML when entering an environment that uses a more antiquated HTML/CSS solution.
      </p>
    ]]></description>
  </entry>
  <entry>
    <title><![CDATA[ SQL Server/MySQL and other database management systems ]]></title>
    <rank>Good</rank>
    <description><![CDATA[
      <p>
        I've been working with DBMS (Database Management Systems) for almost as long as I've been doing development, so I'm well versed with writing SQL queries, joins, stored procs for SQL Server and MySQL based applications.  So I feel comfortable working at the database layer as a developer, but to warn you I haven't done much on the Administrator side, I've mostly done SQL in order to make my applications work well with the database layer.            
      </p>
    ]]></description>
  </entry>
  <entry>
    <title><![CDATA[ HTML &amp; HTML5]]></title>
    <rank>Good</rank>
    <description><![CDATA[
      <p>
        I learned HTML by hand coding everything as opposed to using a WIZIWYG like Dreamweaver, so much of what I do in terms of development is using good old notepad or a similar text based editor to create my web pages.So needless to say, I'm pretty well versed and comfortable in building entire websites from scratch by hand-coding them.
      </p>
      <p>
        My experience with WYSIWYG editors is fairly limited I must admit, with limited experience with Dreamweaver and Frontpage when I first started out.  I've often found that the code generated from these applications has not been to my liking, so I often hand code everything to make sure that the code is easily modifiable and meets my expectations.            
      </p>
      <p>
        More recently, I've started to become more adept at using frameworks and templating to separate data from presentation.
      </p>
    ]]></description>
  </entry>
  <entry>
    <title><![CDATA[ C# and/or .NET based Web development ]]></title>
    <rank>Some experience, not my forte</rank>
    <description><![CDATA[
      <p>
        My experience with C# and .NET based technologies have been mostly on the maintenance side. Often times, when I've come into a company that uses .NET for the web applications, they're usually in the process of migrating to a LAMP stack, so often times I've used C# and .NET in terms of maintaining or transferring functionality to a PHP based system.  That's not to say that I can't develop in .NET, but my forte is definitely on the LAMP and HTML5/Javascript side at the moment.
      </p>
    ]]></description>
  </entry>
  <entry>
    <title><![CDATA[Facebook Development]]></title>
    <rank>Some experience, not my forte</rank>
    <description><![CDATA[
      <p>
        I have a little bit of experience developing iFramed applications using the Facebook platform a few years ago.  My experience with Facebook is that I found putting up applications fairly easy to do on the Facebook platform, but I had to watch out for changes with their API.            
      </p>
      <p>
        I also maintain my own Facebook page, A Road A Little Less Traveled, so I know a little bit about pages as well.
      </p>
    ]]></description>
  </entry>
  <entry>
    <title><![CDATA[CMS Experience (Drupal, Joomla, Wordpress)]]></title>
    <rank>Some experience, not my forte</rank>
    <description><![CDATA[
      <p>
        I have some experience maintaining and working with CMS systems, although when left to my own devices I often prefer to write to my own code based on the needs of the system I'm trying to create.  I guess my feelings about CMS systems is that sometimes they add complexity for a problem that may have a simpler solution, and sometimes the solution (the CMS system) doesn't fit the problem in hand.
      </p>
      <p>
        That's not to say that I can't help modify or add features to a website that already uses a CMS, it's just that I usually believe in using the right tool for the right situation. The extendability of CMS platforms such as Drupal or Joomla is very helpful in this regard, but like I had mentioned before, when using a CMS sometimes you are subject to the artificial rules that a CMS system may impart on your website, so it's important to know your requirements before proceeding with a CMS or custom solution.
      </p>
    ]]></description>
  </entry>
  <entry>
    <title><![CDATA[Actionscript, Flash, Phonegap and other emerging technologies]]></title>
    <rank>Good at acquiring new skills</rank>
    <description><![CDATA[
      <p>
        I have fairly limited experience using Actionscript, but during my limited time using it I found it very similar to Javascript and fun to use, so I know in the case of an application using Actionscript I can pick it up pretty easily.
      </p>
      <p>
        Mobile development and developing websites for mobile devices is another area that I'm also interested in learning and getting better at, as the mobile market is growing daily, and web and application developers that are proficient at developing mobile-friendly websites are people that are making our future internet that much better, and that's something I definitely want to be a part of.
      </p>
    ]]></description>
  </entry>

<!--
  <entry>
    <title><![CDATA[]]></title>
    <description><![CDATA[

    ]]></description>
  </entry>
-->
</proficiencies>